name: Build and Publish Docker Image

env:
  platforms: linux/amd64,linux/arm64

on:
  release:
    types:
      - published
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: proxy-server
            dockerfile: server-build.Dockerfile
          - name: proxy-agent
            dockerfile: agent-build.Dockerfile
          - name: proxy-client
            dockerfile: client-build.Dockerfile
    steps:
      - uses: actions/checkout@v3
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          tags: |
            type=semver,pattern={{version}}
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
          flavor: |
            latest=${{ github.ref == 'refs/heads/master' }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: ${{env.platforms}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        timeout-minutes: 5
        with:
          version: latest
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        timeout-minutes: 20
        with:
          context: .
          file: artifacts/images/${{ matrix.dockerfile }}
          platforms: ${{env.platforms}}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
